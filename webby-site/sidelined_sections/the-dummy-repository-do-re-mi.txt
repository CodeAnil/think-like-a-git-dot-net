---
title:      "The Dummy Repository: Do-Re-Mi"
created_at: 2011-09-25 22:26:37.488786 -07:00
layout:     section
filter:
  - erb
  - markdown
---

For the next few pages, I'll be referring to a really simple repository that I created just to demonstrate how different Git operations work.  You can grab a copy yourself from GitHub with:

<code>git clone git://github.com/geeksam/do-re-mi.git</code>

This repository contains just two files:  a **README**, which is never changed, and a file called **elements.txt**, which starts out empty and has individual lines added to it in various commits on different branches.

There are four branches in this repository:

* **master**, the starting point for all others;
* **sound_of_music**, which has three one-line commits that add the first three notes to **elements.txt** and a fourth that adds the rest;
* **simpsons**, which adds an amusing quote from The Simpsons (just in case old musicals don't do it for you); and
* **metasyntactic_variables**, because I needed another branch for my demo and had used up all my creativity that day with the previous two branches.  (=

<div class="wp-caption">
  <img src="/assets/do-re-mi/initial-checkout.png" class="no-shadow" />
  <br /><strong>What you'll see immediately after cloning</strong>
</div>

*(Incidentally, if you haven't run across <a href="http://catb.org/jargon/">the Jargon File</a>, it's a fascinating peek into the cultural anthropology of hackerdom.  As a relatively new programmer, I once asked someone why they used "foo" and "bar" as placeholder variables.  Years later, I encountered <a href="http://catb.org/jargon/html/M/metasyntactic-variable.html">the Jargon File entry on metasyntactic variables</a>, and was enlightened.)*
